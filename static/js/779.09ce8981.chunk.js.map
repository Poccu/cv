{"version":3,"file":"static/js/779.09ce8981.chunk.js","mappings":"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","sources":["pages/Dictionary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Button,\r\n  Stack,\r\n} from '@mui/material'\r\nimport SearchIcon from '@mui/icons-material/Search'\r\nimport { styled, alpha } from '@mui/material/styles'\r\nimport InputBase from '@mui/material/InputBase'\r\nimport axios from 'axios'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Snackbar from '@mui/material/Snackbar'\r\nimport MuiAlert from '@mui/material/Alert'\r\nimport HearingIcon from '@mui/icons-material/Hearing'\r\nimport HearingDisabledIcon from '@mui/icons-material/HearingDisabled'\r\nimport Tabs from '@mui/material/Tabs'\r\nimport Tab from '@mui/material/Tab'\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport ListItemButton from '@mui/material/ListItemButton'\r\nimport Divider from '@mui/material/Divider'\r\nimport Badge from '@mui/material/Badge'\r\nimport ClearAllIcon from '@mui/icons-material/ClearAll'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport Collapse from '@mui/material/Collapse'\r\n\r\nlet randomWords = require('random-words')\r\n\r\nconst urlAudio = process.env.REACT_APP_AUDIO_URL\r\nconst urlDictionary = process.env.REACT_APP_DICTIONARY_URL\r\n\r\nconst ThemeButton = styled(Button)(({ theme }) => ({\r\n  fontSize: 16,\r\n  color: theme.palette.button.primary,\r\n  borderRadius: 50,\r\n  height: 44,\r\n  padding: '0 16px',\r\n  border: '2px solid',\r\n  borderColor: alpha(theme.palette.search.primary, 0.1),\r\n  // backgroundColor: alpha(theme.palette.search.primary, 0.1),\r\n  '&:hover': {\r\n    border: '2px solid',\r\n    borderColor: alpha(theme.palette.search.primary, 0),\r\n    backgroundColor: alpha(theme.palette.search.primary, 0.1),\r\n  },\r\n  // '&:active': {\r\n  //   backgroundColor: '#0062cc',\r\n  // },\r\n}))\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n})\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.search.primary, 0.1),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.search.primary, 0.14),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: '400px',\r\n  },\r\n}))\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}))\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: 'auto',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '342px',\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Dictionary() {\r\n  const [error, setError] = useState(false) // catch errors\r\n  const [open, setOpen] = useState(false) // no input notifications\r\n  const [open2, setOpen2] = useState(false) // no audio notifications\r\n\r\n  const [favs, setFavs] = useState([]) // array of favourite words\r\n  const [phonetics, setPhonetics] = useState([]) // array of phonetics of favourite words\r\n  const [audios, setAudios] = useState([]) // array of audio of favourite words\r\n\r\n  // localStorage\r\n  useEffect(() => {\r\n    setFavs(JSON.parse(window.localStorage.getItem('favs')))\r\n    setPhonetics(JSON.parse(window.localStorage.getItem('phonetics')))\r\n    setAudios(JSON.parse(window.localStorage.getItem('audios')))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('favs', JSON.stringify(favs))\r\n    window.localStorage.setItem('phonetics', JSON.stringify(phonetics))\r\n    window.localStorage.setItem('audios', JSON.stringify(audios))\r\n  }, [favs])\r\n\r\n  const setFavourite = () => {\r\n    if (favs.indexOf(data.word) === -1) {\r\n      setFavs((prevFavs) => [...prevFavs, data.word])\r\n      if (data.phonetic) {\r\n        setPhonetics((prevPhonetics) => [\r\n          ...prevPhonetics,\r\n          data.phonetic.replace(/[\\/\\]\\[]/g, ''),\r\n        ])\r\n      } else setPhonetics((prevPhonetics) => [...prevPhonetics, undefined])\r\n      setAudios((prevAudios) => [\r\n        ...prevAudios,\r\n        `${urlAudio}/${data.word}--_gb_1.mp3`,\r\n      ])\r\n      // console.log(favs)\r\n      // console.log(phonetics)\r\n      // console.log(audios)\r\n    }\r\n  }\r\n\r\n  const setNotFavourite = () => {\r\n    setFavs((prevFavs) => prevFavs.filter((item) => item !== data.word))\r\n    setPhonetics((prevPhonetics) =>\r\n      prevPhonetics.filter(\r\n        (item) => item !== data.phonetic.replace(/[\\/\\]\\[]/g, '')\r\n      )\r\n    )\r\n    setAudios((prevAudios) =>\r\n      prevAudios.filter((item) => item !== data.phonetics[0].audio)\r\n    )\r\n    // console.log(favs)\r\n    // console.log(phonetics)\r\n    // console.log(audios)\r\n  }\r\n\r\n  const [value, setValue] = useState(0) // tabs state\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const [data, setData] = useState({}) // response data object\r\n  const [searchWord, setSearchWord] = useState('')\r\n  const [audioWord, setAudioWord] = useState('')\r\n\r\n  // localStorage\r\n  useEffect(() => {\r\n    setData(JSON.parse(window.localStorage.getItem('data')))\r\n    setAudioWord(JSON.parse(window.localStorage.getItem('audioWord')))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('data', JSON.stringify(data))\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('audioWord', JSON.stringify(audioWord))\r\n  }, [audioWord])\r\n\r\n  const playAudio = () => {\r\n    let audio = new Audio(audioWord)\r\n    audio.play()\r\n\r\n    // todo\r\n    // try {\r\n    // } catch (err) {\r\n    //   console.log('oops')\r\n    // }\r\n  }\r\n\r\n  const getMeaning = (event) => {\r\n    const urlSearchWord = `${urlDictionary}/${searchWord}`\r\n\r\n    if (event.key === 'Enter') {\r\n      axios\r\n        .get(urlSearchWord)\r\n        .then((response) => {\r\n          setValue(0)\r\n          setData(response.data[0])\r\n          // console.log(response.data[0])\r\n          // setOpen(true)\r\n          let url = `${urlAudio}/${searchWord.toLowerCase()}--_gb_1.mp3`\r\n          let audio = new Audio(url)\r\n          audio.play()\r\n          setAudioWord(url)\r\n          // console.log(audioWord)\r\n        })\r\n        .catch((error) => {\r\n          setError(true)\r\n          setOpen(true)\r\n          console.error('THIS IS ERROR --->', error)\r\n        })\r\n      setError(false)\r\n      setSearchWord('')\r\n    }\r\n  }\r\n\r\n  const getRandom = () => {\r\n    const random = randomWords()\r\n    // console.log(random)\r\n    axios\r\n      .get(`${urlDictionary}/${random}`)\r\n      .then((response) => {\r\n        setValue(0)\r\n        setData(response.data[0])\r\n        // console.log(response.data[0])\r\n        // setOpen(true)\r\n        let url = `${urlAudio}/${random}--_gb_1.mp3`\r\n        let audio = new Audio(url)\r\n        audio.play()\r\n        setAudioWord(url)\r\n        // console.log(audioWord)\r\n      })\r\n      .catch((error) => {\r\n        setError(true)\r\n        setOpen(true)\r\n        console.error('THIS IS ERROR --->', error)\r\n      })\r\n    setError(false)\r\n    setSearchWord('')\r\n  }\r\n\r\n  const handleClick2 = () => {\r\n    setOpen2(true)\r\n  }\r\n\r\n  const handleClose2 = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n\r\n    setOpen2(false)\r\n  }\r\n\r\n  // const handleClick = () => {\r\n  //   setOpen(true)\r\n  // }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData({})\r\n  }\r\n\r\n  let length = [...Array(favs.length).keys()]\r\n\r\n  const clearAllFavs = () => {\r\n    setFavs([])\r\n    setPhonetics([])\r\n    setAudios([])\r\n  }\r\n\r\n  // todo\r\n  // const [localValue, setLocalValue] = useState('')\r\n\r\n  // const onInputBlur = () => {\r\n  //   // changeValue(localValue) // fixme\r\n  //   setSearchWord(localValue)\r\n  // }\r\n  // const onInputChange = (e) => {\r\n  //   setLocalValue(e.target.value)\r\n  // }\r\n\r\n  // onChange={(event) => setSearchWord(event.target.value)}\r\n  // onBlur = { onInputBlur }\r\n  // onChange = { onInputChange }\r\n\r\n  useEffect(() => {\r\n    {\r\n      data.word\r\n        ? (document.title = `Dictionary - ${data.word}`)\r\n        : (document.title = 'Dictionary')\r\n    }\r\n  }, [data.word])\r\n\r\n  return (\r\n    <Box sx={{ mt: 14 }}>\r\n      <Container maxwidth=\"sm\">\r\n        {!data.word ? (\r\n          <Typography\r\n            variant=\"h3\"\r\n            sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n          >\r\n            <b>Enter the word</b>\r\n          </Typography>\r\n        ) : null}\r\n        <Box\r\n          sx={{ mt: 5 }}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Box>\r\n            <IconButton\r\n              onClick={getRandom}\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              title=\"Random\"\r\n            >\r\n              <ShuffleIcon style={{ fontSize: 30 }} />\r\n            </IconButton>\r\n          </Box>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={searchWord}\r\n              onChange={(event) => setSearchWord(event.target.value)}\r\n              // onBlur={onInputBlur} // todo\r\n              // onChange={onInputChange}\r\n              onKeyPress={getMeaning}\r\n            />\r\n          </Search>\r\n\r\n          <Box>\r\n            {error ? (\r\n              <Snackbar\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n              >\r\n                <Alert\r\n                  onClose={handleClose}\r\n                  severity=\"error\"\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  Enter the correct word!\r\n                </Alert>\r\n              </Snackbar>\r\n            ) : null}\r\n          </Box>\r\n        </Box>\r\n        <br />\r\n\r\n        {data.word ? (\r\n          <Box>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={3}\r\n                sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n              >\r\n                <Box sx={{ display: { xs: 'none', md: 'block' } }}>\r\n                  {/* {data.phonetics[0].audio ? ( */}\r\n                  {true ? (\r\n                    <IconButton\r\n                      onClick={playAudio}\r\n                      color=\"inherit\"\r\n                      title=\"Audio\"\r\n                    >\r\n                      <HearingIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      onClick={handleClick2}\r\n                      color=\"inherit\"\r\n                      title=\"No Audio\"\r\n                    >\r\n                      <HearingDisabledIcon style={{ fontSize: 40 }} />\r\n                      <Snackbar\r\n                        open={open2}\r\n                        autoHideDuration={3000}\r\n                        onClose={handleClose2}\r\n                      >\r\n                        <Alert\r\n                          onClose={handleClose2}\r\n                          severity=\"error\"\r\n                          sx={{ width: '100%' }}\r\n                        >\r\n                          Sorry, no audio 😞\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </IconButton>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={6}\r\n                sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n              >\r\n                <Box>\r\n                  <br />\r\n                  <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n                    <Typography\r\n                      variant=\"h1\"\r\n                      sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n                    >\r\n                      {data.word.length > 16 ? (\r\n                        <b>{data.word.substr(-150, 13) + '…'}</b>\r\n                      ) : (\r\n                        <b>{data.word}</b>\r\n                      )}\r\n                      {data.phonetic ? (\r\n                        <Box>\r\n                          <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            [ {data.phonetic.replace(/[\\/\\]\\[]/g, '')} ]\r\n                          </Typography>\r\n                        </Box>\r\n                      ) : (\r\n                        <Box>\r\n                          <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            [ - ]\r\n                            {/* {data.phonetics[1].text.replace(/[\\/\\]\\[]/g, '')} ] */}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n                      {/* {data.phonetics[0].text ? (\r\n                        <Box>\r\n                          <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            [ {data.phonetics[0].text.replace(/[\\/\\]\\[]/g, '')}{' '}\r\n                            ]\r\n                          </Typography>\r\n                        </Box>\r\n                      ) : (\r\n                        <Box>\r\n                          <Typography variant=\"h5\" color=\"textSecondary\">\r\n                            [ {data.phonetics[1].text.replace(/[\\/\\]\\[]/g, '')}{' '}\r\n                            ]\r\n                          </Typography>\r\n                        </Box>\r\n                      )} */}\r\n                    </Typography>\r\n                  </Box>\r\n                  <br />\r\n                  <br />\r\n                </Box>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={3}\r\n                sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n              >\r\n                <Box sx={{ display: { xs: 'none', md: 'block' } }}>\r\n                  <IconButton onClick={clearData} color=\"inherit\" title=\"Clear\">\r\n                    <CloseIcon style={{ fontSize: 40 }} />\r\n                  </IconButton>\r\n                </Box>\r\n\r\n                <Box sx={{ display: { xs: 'none', md: 'block' } }}>\r\n                  {favs.includes(data.word) ? (\r\n                    <IconButton\r\n                      onClick={setNotFavourite}\r\n                      color=\"error\"\r\n                      title=\"Delete from Favourites\"\r\n                    >\r\n                      <FavoriteIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <IconButton\r\n                      onClick={setFavourite}\r\n                      color=\"inherit\"\r\n                      title=\"Add to Favourites\"\r\n                    >\r\n                      <FavoriteBorderIcon style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box sx={{ display: { xs: 'block', md: 'none' } }}>\r\n              <Stack justifyContent=\"center\" direction=\"row\" spacing={5}>\r\n                {/* {data.phonetics[0].audio ? ( */}\r\n                {true ? (\r\n                  <IconButton onClick={playAudio} color=\"inherit\" title=\"Audio\">\r\n                    <HearingIcon style={{ fontSize: 50 }} />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    onClick={handleClick2}\r\n                    color=\"inherit\"\r\n                    title=\"No Audio\"\r\n                  >\r\n                    <HearingDisabledIcon style={{ fontSize: 50 }} />\r\n                    <Snackbar\r\n                      open={open2}\r\n                      autoHideDuration={3000}\r\n                      onClose={handleClose2}\r\n                    >\r\n                      <Alert\r\n                        onClose={handleClose2}\r\n                        severity=\"error\"\r\n                        sx={{ width: '100%' }}\r\n                      >\r\n                        Sorry, no audio 😞\r\n                      </Alert>\r\n                    </Snackbar>\r\n                  </IconButton>\r\n                )}\r\n\r\n                {favs.includes(data.word) ? (\r\n                  <IconButton\r\n                    onClick={setNotFavourite}\r\n                    color=\"error\"\r\n                    title=\"Delete from Favourites\"\r\n                  >\r\n                    <FavoriteIcon style={{ fontSize: 80 }} />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    onClick={setFavourite}\r\n                    color=\"inherit\"\r\n                    title=\"Add to Favourites\"\r\n                  >\r\n                    <FavoriteBorderIcon style={{ fontSize: 80 }} />\r\n                  </IconButton>\r\n                )}\r\n                <IconButton onClick={clearData} color=\"inherit\" title=\"Clear\">\r\n                  <CloseIcon style={{ fontSize: 50 }} />\r\n                </IconButton>\r\n              </Stack>\r\n              <br />\r\n            </Box>\r\n            <Box>\r\n              <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"tabs\"\r\n                  textColor=\"inherit\"\r\n                  indicatorColor=\"secondary\"\r\n                  // centered\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                  allowScrollButtonsMobile\r\n                >\r\n                  {[0, 1, 2, 3, 4].map((i) =>\r\n                    data.meanings[i] ? (\r\n                      <Tab\r\n                        label={\r\n                          <Typography variant=\"h6\">\r\n                            <b>{data.meanings[i]?.partOfSpeech}</b>\r\n                          </Typography>\r\n                        }\r\n                        {...a11yProps(0)}\r\n                        key={i}\r\n                      />\r\n                    ) : null\r\n                  )}\r\n                </Tabs>\r\n              </Box>\r\n              {[0, 1, 2, 3, 4].map((i) => (\r\n                <TabPanel value={value} index={i} key={i}>\r\n                  {data.meanings[i] ? (\r\n                    <Box>\r\n                      <Typography variant=\"h3\" color=\"textSecondary\">\r\n                        <b>{data.meanings[i]?.partOfSpeech}</b>\r\n                      </Typography>\r\n                      <br />\r\n                      <Typography variant=\"h5\">\r\n                        <b>Definition</b>\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n                        {data.meanings[\r\n                          i\r\n                        ].definitions[0].definition[0].toUpperCase() +\r\n                          data.meanings[i].definitions[0].definition.slice(1)}\r\n                      </Typography>\r\n                      {data.meanings[i].definitions[0].example ? (\r\n                        <Box>\r\n                          <br />\r\n                          <Typography variant=\"h5\">\r\n                            <b>Example</b>\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">\r\n                            <i>'{data.meanings[i].definitions[0].example}'</i>\r\n                          </Typography>\r\n                        </Box>\r\n                      ) : null}\r\n                    </Box>\r\n                  ) : null}\r\n                </TabPanel>\r\n              ))}\r\n            </Box>\r\n            <>\r\n              <br />\r\n              <Divider>\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n                >\r\n                  <Badge badgeContent={favs.length} color=\"secondary\" max={99}>\r\n                    <b>Favourites</b>\r\n                  </Badge>\r\n                </Typography>\r\n              </Divider>\r\n              <br />\r\n            </>\r\n            {favs.length > 0 ? (\r\n              <Grid\r\n                container\r\n                // direction=\"row\"\r\n                // justifyContent=\"center\"\r\n                // alignItems=\"center\"\r\n              >\r\n                <Grid item xs={12} md={3}></Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n                >\r\n                  <Box>\r\n                    <List>\r\n                      <TransitionGroup>\r\n                        {length.map((index) => (\r\n                          <Collapse key={index}>\r\n                            <ListItem\r\n                              secondaryAction={\r\n                                <IconButton\r\n                                  onClick={() => {\r\n                                    setFavs((prevFavs) =>\r\n                                      prevFavs.filter(\r\n                                        (item) => item !== favs[index]\r\n                                      )\r\n                                    )\r\n                                    setPhonetics((prevPhonetics) =>\r\n                                      prevPhonetics.filter(\r\n                                        (item) => item !== phonetics[index]\r\n                                      )\r\n                                    )\r\n                                    setAudios((prevAudios) =>\r\n                                      prevAudios.filter(\r\n                                        (item) => item !== audios[index]\r\n                                      )\r\n                                    )\r\n                                    // console.log(favs)\r\n                                    // console.log(phonetics)\r\n                                    // console.log(audios)\r\n                                  }}\r\n                                  edge=\"end\"\r\n                                  aria-label=\"delete\"\r\n                                  color=\"inherit\"\r\n                                  title=\"Delete\"\r\n                                >\r\n                                  <CloseIcon style={{ fontSize: 30 }} />\r\n                                </IconButton>\r\n                              }\r\n                            >\r\n                              <ListItemButton\r\n                                onClick={\r\n                                  audios[index]\r\n                                    ? () => {\r\n                                        let audio = new Audio(audios[index])\r\n                                        audio.play()\r\n                                      }\r\n                                    : handleClick2\r\n                                }\r\n                              >\r\n                                <ListItemAvatar>\r\n                                  <IconButton\r\n                                    onClick={() => {\r\n                                      window.scrollTo(0, 0)\r\n                                      axios\r\n                                        .get(`${urlDictionary}/${favs[index]}`)\r\n                                        .then((response) => {\r\n                                          setValue(0)\r\n                                          setData(response.data[0])\r\n                                          // setOpen(true)\r\n                                          // let audio = new Audio(\r\n                                          //   response.data[0].phonetics[0].audio\r\n                                          // )\r\n                                          // audio.play()\r\n\r\n                                          let url = `${urlAudio}/${favs[index]}--_gb_1.mp3`\r\n                                          let audio = new Audio(url)\r\n                                          // audio.play()\r\n                                          setAudioWord(url)\r\n                                        })\r\n                                        .catch((error) => {\r\n                                          setError(true)\r\n                                          setOpen(true)\r\n                                          console.error(\r\n                                            'THIS IS ERROR --->',\r\n                                            error\r\n                                          )\r\n                                        })\r\n                                      setError(false)\r\n                                      setSearchWord('')\r\n                                    }}\r\n                                    color=\"inherit\"\r\n                                    title=\"Search\"\r\n                                  >\r\n                                    <SearchIcon style={{ fontSize: 30 }} />\r\n                                  </IconButton>\r\n                                </ListItemAvatar>\r\n\r\n                                <ListItemText\r\n                                  disableTypography\r\n                                  primary={\r\n                                    <Typography\r\n                                      variant=\"h4\"\r\n                                      color=\"textPrimary\"\r\n                                    >\r\n                                      {favs[index].length > 16 ? (\r\n                                        <b>\r\n                                          {favs[index].substr(-150, 13) + '…'}\r\n                                        </b>\r\n                                      ) : (\r\n                                        <b>{favs[index]}</b>\r\n                                      )}\r\n                                    </Typography>\r\n                                  }\r\n                                  secondary={\r\n                                    <Typography\r\n                                      variant=\"p\"\r\n                                      color=\"textSecondary\"\r\n                                    >\r\n                                      {/* {phonetics[index].length < 20\r\n                                      ? '[ ' + phonetics[index] + ' ]'\r\n                                      : '[ ' +\r\n                                        phonetics[index].substr(-150, 29) +\r\n                                        '…' +\r\n                                        ' ]'} */}\r\n\r\n                                      {phonetics[index]\r\n                                        ? '[ ' + phonetics[index] + ' ]'\r\n                                        : '[ - ]'}\r\n                                    </Typography>\r\n                                  }\r\n                                />\r\n                              </ListItemButton>\r\n                            </ListItem>\r\n                          </Collapse>\r\n                        ))}\r\n                      </TransitionGroup>\r\n                    </List>\r\n                  </Box>\r\n                  <Box sx={({ flexGrow: 1 }, { textAlign: 'right' })}>\r\n                    <br />\r\n                    <ThemeButton\r\n                      variant=\"outlined\"\r\n                      endIcon={<ClearAllIcon style={{ fontSize: 30 }} />}\r\n                      onClick={clearAllFavs}\r\n                    >\r\n                      Clear All\r\n                    </ThemeButton>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}></Grid>\r\n              </Grid>\r\n            ) : (\r\n              <>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n                  color=\"textSecondary\"\r\n                >\r\n                  <br />\r\n                  <b>No favourite words yet 😞</b>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={({ flexGrow: 1 }, { textAlign: 'center' })}\r\n                  color=\"textSecondary\"\r\n                >\r\n                  <b>Please, add some!</b>\r\n                </Typography>\r\n                <br />\r\n              </>\r\n            )}\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box sx={{ display: { xs: 'none', md: 'block' } }}>\r\n              <Box\r\n                sx={{ mt: -1 }}\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/dictionary-bg.png`}\r\n                  alt=\"dictionary\"\r\n                  draggable={false}\r\n                />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{ mt: -1, display: { md: 'none' } }}\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/images/dictionary-bg.png`}\r\n                alt=\"dictionary\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                draggable={false}\r\n              />\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n"],"names":["randomWords","require","urlAudio","process","urlDictionary","ThemeButton","styled","Button","theme","fontSize","color","palette","button","primary","borderRadius","height","padding","border","borderColor","alpha","search","backgroundColor","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","Alert","React","ref","elevation","variant","Search","position","shape","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","Dictionary","useState","error","setError","open","setOpen","setOpen2","favs","setFavs","phonetics","setPhonetics","audios","setAudios","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","setFavourite","indexOf","data","word","prevFavs","phonetic","prevPhonetics","replace","undefined","prevAudios","setNotFavourite","filter","item","audio","setValue","setData","searchWord","setSearchWord","audioWord","setAudioWord","playAudio","Audio","play","handleClick2","handleClose","event","reason","clearData","length","Array","keys","document","title","mt","maxwidth","textAlign","onClick","random","axios","then","response","url","catch","console","size","style","placeholder","inputProps","onChange","target","onKeyPress","urlSearchWord","key","toLowerCase","autoHideDuration","onClose","severity","container","direction","xs","md","substr","includes","newValue","textColor","indicatorColor","scrollButtons","allowScrollButtonsMobile","map","i","meanings","label","partOfSpeech","definitions","definition","toUpperCase","slice","example","badgeContent","max","secondaryAction","edge","scrollTo","disableTypography","secondary","endIcon","src","alt","draggable"],"sourceRoot":""}